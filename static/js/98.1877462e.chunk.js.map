{"version":3,"file":"static/js/98.1877462e.chunk.js","mappings":"uRAWMA,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KACJE,MAAM,yCACNC,SAAS,4BACZC,SAAUJ,EAAAA,KAAaG,SAAS,iCAkElC,UA/Dc,WACZ,OAAiCE,EAAAA,EAAAA,MAAjC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJH,EAAYI,YACdC,EAAAA,GAAAA,QAAc,mCACdJ,EAAS,KAEZ,GAAE,CAACD,EAAaC,IAEjB,IAAMK,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbf,MAAO,GACPE,SAAU,IAEZc,iBAAkBnB,EAClBoB,SAAU,YAA0B,IAAvBjB,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAClBE,EAAU,CAAEJ,MAAAA,EAAOE,SAAAA,IACnBW,EAAOK,WACR,IAGH,OACE,+BACE,UAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,IAAKZ,EAAMa,QAAQ,KACnBC,OAAQ,SACRC,MAAO,SAETT,SAAUJ,EAAOc,aATnB,WAWE,SAAC,IAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKC,cAAY,EAApD,qBAGA,SAAC,KAAD,CAAUjB,OAAQA,IACjBR,EAAY0B,QACX,SAAC,IAAD,CACEF,QAAQ,QACRG,MAAOrB,EAAMsB,QAAQC,QAAQC,KAC7BP,MAAM,SAHR,qDAQF,SAAC,IAAD,CACEQ,SAAU/B,EAAYgC,UACtBjB,GAAI,CAAEM,MAAO,QAASY,GAAI,QAC1BT,QAAQ,YACRU,KAAK,SAJP,SAMGlC,EAAYgC,UAAY,aAAe,eAKjD,C","sources":["pages/LogIn/LogIn.jsx"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Typography, Box, useTheme, Button } from '@mui/material';\n\nimport { AuthForm } from 'components';\nimport { useLoginMutation } from 'redux/authSlice';\nimport { toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst logInSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Correct your email to \"mail@mail.com\"')\n    .required('Please, enter your email'),\n  password: Yup.string().required('Please, enter your password'),\n});\n\nconst LogIn = () => {\n  const [loginUser, loginStatus] = useLoginMutation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (loginStatus.isSuccess) {\n      toast.success('You have successfully logged in');\n      navigate('/');\n    }\n  }, [loginStatus, navigate]);\n\n  const theme = useTheme();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: logInSchema,\n    onSubmit: ({ email, password }) => {\n      loginUser({ email, password });\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: theme.spacing(1.5),\n          margin: '0 auto',\n          width: '340px',\n        }}\n        onSubmit={formik.handleSubmit}\n      >\n        <Typography align=\"center\" variant=\"h3\" gutterBottom>\n          Log In\n        </Typography>\n        <AuthForm formik={formik} />\n        {loginStatus.error && (\n          <Typography\n            variant=\"body1\"\n            color={theme.palette.warning.main}\n            align=\"center\"\n          >\n            Please enter correct login or password\n          </Typography>\n        )}\n        <Button\n          disabled={loginStatus.isLoading}\n          sx={{ width: '120px', mx: 'auto' }}\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          {loginStatus.isLoading ? 'Logging in' : 'Log in'}\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default LogIn;\n"],"names":["logInSchema","Yup","shape","email","required","password","useLoginMutation","loginUser","loginStatus","navigate","useNavigate","useEffect","isSuccess","toast","theme","useTheme","formik","useFormik","initialValues","validationSchema","onSubmit","resetForm","component","sx","display","flexDirection","gap","spacing","margin","width","handleSubmit","align","variant","gutterBottom","error","color","palette","warning","main","disabled","isLoading","mx","type"],"sourceRoot":""}